# ------------------------------
# peco settings
# ------------------------------

# select command history
function peco-select-history() {
	local tac
	if which tac > /dev/null; then
		tac="tac"
	else
		tac="tail -r"
	fi
	BUFFER=$(history -n 1 | \
		eval $tac | \
		awk '!a[$0]++' | \
		peco --query "$LBUFFER")
	CURSOR=$#BUFFER
}
zle -N peco-select-history
bindkey '^R' peco-select-history

# select directory history
function peco-get-destination-from-cdr() {
    cdr -l | \
        sed -e 's/^[[:digit:]]*[[:blank:]]*//' | \
        peco --query "$LBUFFER"
}
function peco-cdr() {
    local destination="$(peco-get-destination-from-cdr)"
    if [ -n "$destination" ]; then
        BUFFER="cd $destination"
        zle accept-line
    else
        zle reset-prompt
    fi
}
zle -N peco-cdr
bindkey '^@' peco-cdr

# select vagrant id
peco-vagrant-id () {
	local vagrantids="$(vagrant global-status | awk '/^[a-f0-9]{7}/')"
	if [ -n "$vagrantids" ]; then
		local vagrantid=$(echo "$vagrantids" | peco | awk '{print $1}')
		if [ -n "$vagrantid" ]; then
			BUFFER="$BUFFER${vagrantid}"
			CURSOR=$#BUFFER
		fi
	fi
}
zle -N peco-vagrant-id
bindkey '^V^I' peco-vagrant-id

# select git commit id
peco-git-commit-id () {
	if git rev-parse 2> /dev/null; then
		local commitid=$(git log --pretty=format:"%h %ad | %s%d [%an]" | peco | awk '{print $1}')
		if [ -n "$commitid" ]; then
			BUFFER="$BUFFER${commitid} "
			CURSOR=$#BUFFER
		fi
	fi
}
zle -N peco-git-commit-id
bindkey '^G^L' peco-git-commit-id

# select git branch name
peco-git-branch () {
	if git rev-parse 2> /dev/null; then
		local branch=$(git branch -a | peco | cut -c 3- | awk '{print $1}')
		if [ -n "$branch" ]; then
			BUFFER="$BUFFER${branch}"
			CURSOR=$#BUFFER
		fi
	fi
}
zle -N peco-git-branch
bindkey '^G^B' peco-git-branch

# select git diff
peco-git-diff() {
	if git rev-parse 2> /dev/null; then
		local commit1="$1"
		local commit2="$1"
		if [ $# -eq 0 ]; then
			commit1=$(git log --pretty=format:"%h %ad | %s%d [%an]" | peco | awk '{print $1}')
			if [ -n "$commit1" ]; then
				commit2=$(git log --pretty=format:"%h %ad | %s%d [%an]" | peco | awk '{print $1}')
			fi
		elif [ -n $2 ]; then
			commit2="$2"
		fi
		if [ -n "$commit2" ]; then
			local target=$(git diff --stat=1024 $commit1 $commit2 | sed -e '$d' | peco | awk '{print $1}')
			if [ -n "$target" ]; then
				vimdiff <(git show $commit1:$target) <(git show $commit2:$target)
			fi
		fi
	fi
}

# select process id
peco-pid() {
	local pid=`ps -ef | peco | awk '{ print $2 }'`
	BUFFER="$BUFFER${pid}"
	CURSOR=$#BUFFER
}
zle -N peco-pid
bindkey '^_' peco-pid

# select local git repository
peco-git-cd() {
	local dir=$(ghq list -p | peco)
	if [ -n "$dir" ]; then
		cd $dir
	fi
}

# select host from local ~/.ssh/config and ssh the host
function peco-sshconfig-ssh() {
    local host=$(grep 'Host ' ~/.ssh/config | sort -r | awk '{print $2}' | peco)
    if [ -n "$host" ]; then
        echo "ssh -F ~/.ssh/config $host\n"
        ssh -F ~/.ssh/config $host
    fi
}

function peco-git-atom() {
     local dir=$(ghq list -p | peco)
     if [ -n "$dir" ]; then
         atom "$dir"
     fi
}
